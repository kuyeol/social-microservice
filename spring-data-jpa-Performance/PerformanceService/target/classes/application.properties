# database init, supports mysql too
#database=h2
#spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
#spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA

spring.jpa.open-in-view=false

spring.mvc.pathmatch.matching-strategy=ant_path_matcher
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html


# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
 logging.level.org.springframework.web=DEBUG
 logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h

database=postgres
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://182.218.135.229:5432/performance
spring.datasource.username=quarkus
spring.datasource.password=quarkus
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always